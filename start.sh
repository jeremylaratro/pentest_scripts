#!/bin/bash
opts='i:d:lsh'
while getopts $opts arg; do
  case $arg in
    i ) ip=$OPTARG;;
    d ) domain=$OPTARG;;
    l ) lfi=$OPTARG;;
    s ) sub=$OPTARG;;
    h ) usage; exit 1;;
    * ) echo "unknown argument";;
  esac
done

# Shows the simple usage / syntax
usage() {
  echo "This is a simple script to streamline inital discovery and enumeration. "
  echo "Usage:
       $0 -i ip_addr -d domain -l lfi scan=enabled -s subdomain discovery=enabled"
}

nmap_run() {
  nmap -vv -sV --top-ports 200 $ip -oG $LOGFILE
  echo "Nmap scan complete"
}

web_server() {
  gobuster dir -u http://$ip --wordlist /usr/share/dirb/wordlists/big.txt -x php,txt,js,html -o $LOGFILE
  echo "Web server scan complete" -v

}
# still developing this function
lfi_scan() {
  filename= $(cat tmp.txt | grep .php > tmp.txt && cat tmp.txt | sed 's//[0-9]//g') 
  gobuster fuzz --url http://$ip/$filename/?file=FUZZ -w /usr/share/wordlists/SecLists-master/Fuzzing/LFI/LFI-LFISuite-pathtotest-huge.txt -b 404,400

}
# still developing this function
php_found() {
  cat $LOG_FILE | grep *.php > tmp.txt
  if [ -s tmp.txt ]
  then
    echo "PHP files found, starting LFI check.."
    lfi_scan
  else
    echo "No PHP files found, skipping LFI scan.."
  fi
}

subd() {
  if $domain; then
    sublist3r -d $domain 
  elif $ip; then
    sublist3r -d http://$ip
  fi
}

# start function create the output file to which the scans will be written. 
start() {
  echo "Starting in.."
  for i in {3..1}
  do
    echo -n "$i........."
    sleep 1
  done
  echo " "
  touch initial_scans.txt
  LOGFILE=initial_scans.txt
  echo "Output available at $LOGFILE
  
  "
}

#main function runs the scan functions after usage info and initilization has completed. 
main() {
  #if $help; then
   # usage && exit 1
  #fi
  usage && start
  echo "Starting inital nmap scan on $ip using top 200 ports."
  nmap_run
  echo "Starting directory enumeration on http://$ip"
  web_server
  if $sub; then
    echo "Starting subdomain discovery"
    subd
  fi
  if $lfi; then
    echo "Starting PHP/LFI scan"
    phpfound && lfi_scan
  fi
 }
 

main
