#!/bin/bash

while getopts "i:" arg; do
  case $arg in
    i) ip=$OPTARG;;
    *) echo "unknown argument";;
  esac
done

# Shows the simple usage / syntax
usage() {
  echo "This is a simple script to streamline inital discovery and enumeration. "
  echo "Usage: "
  echo "	-i --> ip address of target"
  echo "Syntax: "
  echo " 	$0 -i ipaddress"
  echo "Starting in.."
  for i in {3..1}
  do
    echo -n "$i........."
    sleep 1
  done
  echo " "

}

nmap_run() {
  nmap -vv -sV --top-ports 200 $ip 
  echo "Nmap scan complete"
}

web_server() {
  gobuster dir -u http://$ip --wordlist /usr/share/dirb/wordlists/big.txt -x php,txt,js,html >> $LOGFILE
  echo "Web server scan complete"

}
# still developing this function
lfi_scan() {
  filename= $(cat tmp.txt | grep .php > tmp.txt && cat tmp.txt | sed 's//[0-9]//g') 
  gobuster fuzz --url http://$ip/$filename/?file=FUZZ -w /usr/share/wordlists/SecLists-master/Fuzzing/LFI/LFI-LFISuite-pathtotest-huge.txt -b 404,400

}
# still developing this function
php_found() {
  cat $LOG_FILE | grep *.php > tmp.txt
  if [ -s tmp.txt ]
  then
    echo "PHP files found, starting LFI check.."
    lfi_scan
  else
    echo "No PHP files found, skipping LFI scan.."
  fi
}
# start function create the output file to which the scans will be written. 
start() {
  touch initial_scans.txt
  LOGFILE=initial_scans.txt
  echo "Output available at $LOGFILE"
}

#main function runs the scan functions after usage info and initilization has completed. 
main() {
  echo "Starting inital nmap scan on $ip using top 200 ports."
  nmap_run
  echo "Starting directory enumeration on http://$ip"
  web_server
 }
 
usage
start
main
